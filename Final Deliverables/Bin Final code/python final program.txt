import time
import sys
import ibmiotf.application
import ibmiotf.device
import random

#Thiyagarajan IBM
organization = "7gwfxt"
deviceType = "T1"
deviceId = "12345"
authMethod = "token"
authToken = "123456789"

#Gpio
def level():
    c=""
    if Bin>=90:
        c="The Bin is full "
    else:
        c="The Bin level is not full"
    return c

try:
    deviceOptions = {"org":organization,"type":deviceType,"id":deviceId,"auth-method":authMethod,"auth-token":authToken}
    deviceCli = ibmiotf.device.Client(deviceOptions)

except Exception as e:
    print("Caught exception connecting device: %s" %str(e))
    sys.exit()

#CONNECCT
deviceCli.connect()

while True:
    
    Bin=random.randint(0,100)
    a=level()

    def myOnPublishCallback():
        print("Published Bin level = %s %%" %Bin,"Level = %s " %a,"to IBM Watson")
        
            
    data={'bin':Bin,'level':level()}

    success = deviceCli.publishEvent("IoTSensor","json",data,qos=0, on_publish=myOnPublishCallback)
    if not success:
        print("Not connected to IoTF")
    time.sleep(10)

#Disconnect

deviceCli.disconnect()
